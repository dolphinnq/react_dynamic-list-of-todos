{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","setFilteredTodos","useState","query","setQuery","filterBy","setFilterBy","useEffect","filteredTodos","filter","toLowerCase","includes","filterTodos","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","isLoading","setIsLoading","selectedUser","setSelectedUser","finally","href","email","name","App","setTodos","isRendered","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15c8b236.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn(\n              { 'has-background-info-light': selectedTodo?.id === id },\n            )}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nfunction filterTodos(\n  todos: Todo[],\n  filterBy: string,\n  query: string,\n): Todo[] {\n  let filteredTodos = [...todos];\n\n  switch (filterBy) {\n    case 'active':\n      filteredTodos = todos.filter(todo => !todo.completed);\n      break;\n\n    case 'completed':\n      filteredTodos = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase()));\n  }\n\n  return filteredTodos;\n}\n\ntype Props = {\n  todos: Todo[],\n  setFilteredTodos: (todos: Todo[]) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('');\n\n  useEffect(() => {\n    const filteredTodos = filterTodos(todos, filterBy, query);\n\n    setFilteredTodos(filteredTodos);\n  }, [todos, filterBy, query, setFilteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => setFilterBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  if (selectedTodo) {\n    getUser(selectedTodo.userId)\n      .then(setSelectedUser)\n      .finally(() => setIsLoading(false));\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isRendered = !isLoading && todos.length > 0;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isRendered && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}